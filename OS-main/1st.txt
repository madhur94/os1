#include <iostream>
#include <fstream>   // For file operations
#include <string>    // For string handling

using namespace std;

void copyFile(const string& source, const string& destination) {
    ifstream inFile(source);
    ofstream outFile(destination);

    if (!inFile) {
        cerr << "Error: Cannot open source file.\n";
        return;
    }
    if (!outFile) {
        cerr << "Error: Cannot open/create destination file.\n";
        return;
    }

    string line;
    while (getline(inFile, line)) {
        outFile << line << endl;
    }

    cout << "File copied successfully.\n";

    inFile.close();
    outFile.close();
}

void grepFile(const string& pattern, const string& filename) {
    ifstream file(filename);

    if (!file) {
        cerr << "Error: Cannot open file.\n";
        return;
    }

    string line;
    int lineNum = 1;
    bool found = false;
    while (getline(file, line)) {
        if (line.find(pattern) != string::npos) {
            cout << "Line " << lineNum << ": " << line << endl;
            found = true;
        }
        lineNum++;
    }

    if (!found)
        cout << "Pattern not found.\n";

    file.close();
}

int main() {
    int choice;

    do {
        cout << "\n--- Menu ---\n";
        cout << "1. Copy File (cp)\n";
        cout << "2. Search in File (grep)\n";
        cout << "3. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        cin.ignore(); // Flush newline from input buffer

        switch (choice) {
            case 1: {
                string src, dest;
                cout << "Enter source file name: ";
                getline(cin, src);
                cout << "Enter destination file name: ";
                getline(cin, dest);
                copyFile(src, dest);
                break;
            }
            case 2: {
                string pattern, file;
                cout << "Enter pattern to search: ";
                getline(cin, pattern);
                cout << "Enter file name: ";
                getline(cin, file);
                grepFile(pattern, file);
                break;
            }
            case 3:
                cout << "Exiting program.\n";
                break;
            default:
                cout << "Invalid choice! Try again.\n";
        }

    } while (choice != 3);

    return 0;
}




#include <stdio.h>
#include <stdlib.h>
#include <dirent.h>

int main(int argc, char *argv[]) {
    const char *directory;

    if (argc == 1) {
        directory = ".";
    } else if (argc == 2) {
        directory = argv[1];
    } else {
        fprintf(stderr, "Usage: %s [directory]\n", argv[0]);
        return EXIT_FAILURE;
    }

    DIR *dir = opendir(directory);
    if (dir == NULL) {
        perror("opendir failed");
        return EXIT_FAILURE;
    }

    struct dirent *entry;
    printf("Contents of directory '%s':\n", directory);
    while ((entry = readdir(dir)) != NULL) {
        printf("%s\n", entry->d_name);
    }

    closedir(dir);
    return EXIT_SUCCESS;
}

